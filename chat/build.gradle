//模块是否单独编译
if (!isNeedChatModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion  rootProject.ext.versions["compileSdkVersion"]
    buildToolsVersion  rootProject.ext.versions["buildToolsVersion"]


    defaultConfig {
        //模块是否单独编译   单独编译 需要有独立的appid
        if(!isNeedChatModule.toBoolean()){
            applicationId "com.mymodule.application_chat"
        }

        minSdkVersion rootProject.ext.versions["minSdkVersion"]
        targetSdkVersion rootProject.ext.versions["targetSdkVersion"]
        versionCode  rootProject.ext.versions["versionCode"]
        versionName rootProject.ext.versions["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // 公共依赖库
    implementation project(':commonlib')
    // 路由aRouter
    implementation rootProject.ext.dependencies["arouter_api"]
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
}
